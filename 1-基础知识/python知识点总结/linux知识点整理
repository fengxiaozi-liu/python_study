linux的两大平台
	Debian 代表作 Ubuntu
		dpkg install package 安装离线完成的安装包
		apk install package  在线安装软件
		.deb 后缀是.deb都是Debian平台的安装包
	Fedora 代表作 Centos
		rpm install package 安装离线完成的包
		yum install package 在线安装软件
		.rpm 都是Fedora平台的安装包

yum相关的命令
	yum install package 
	yum search package
	yum list install 
	yum remove package

linux下个文件夹
	/ib 里面存放系统的函数式库
	/bin 里面放置了系统的执行文档
	/sbin 里面存放的是系统的开机命令相关的操作
	/usr  里面放置了系统软件资源的目录
		/usr/local 管理员自己安装下载的软件一般在这个目录下
		/usr/bin    放置用户的指令
		/usr/lib  放置哥应用软件，目标文件的函数式库
		/usr/sbin 放置非系统正常操作所需要的命令
		/usr/share 放置共享文件的地方，在这个目录下的数据均是可读取的

linux安装一个软件的方法
	1. yum install 软件名 在线安装
	2. wget url 从指定的位置下载一个压缩包
	   tar -zxvf file.tgz 解压安装包
	   ./configure -prefix=文件路径 将配置文件放在指定的目录下
	   make&&make install 进行编译安装
	   vim ~/.bashrc
	   export PATH=$PATH：文件的绝对路径
	   source ~/.bashrc 激活环境变量

linux中配置环境变量
	vim ~/.bashrc或者是vim /etc/bashrc   打开一个环境变量配置文件
	export PATH=$PATH:文件的路径          配置环境变量的路径
	source ~/.bashrc source /etc/bashrc  激活环境变量

linux目录相关的操作指令
	cd 	切换目录
	pwd 打印当前目录
	ls 列出当前目录下的文件和文件夹
	ls -a 列出当前目录下的所有文件和文件夹，包括隐藏文件
	ls -l 列出当前文件的详细信息
	ls -h 更符合人类阅读标准
	whereis 文件名 查看指定文件在哪个目录下

用户管理指令
	增加用户useradd
		useradd username -m -s/bin/bash 创建一个新的用户
			-m 表示创建用户的主目录
			-s 指定用户登录时的shell解析脚本，脚本一般放在/bin/bash文件中
		gpasswd -a username -root
			将用户username 增加到root组里面

	删除用户userdel
		userdel username -r -f
			-r 递归删除，在删除用户的同时，删除家目录下的主目录
			-f 强制删除
	给用户修改密码
		passwd 给当前用户修改密码
		passwd username 给指定的用户修改密码

	管理用户的分组
		groups 查看当前用户所在的分组
		groups username 查看指定用户所在的分组
		gpasswd -a username -root 将指定的用户添加到root分组里面
		gpasswd -d username -root 将指定的用户从root分组里面删除

	用户取得高级权限
		sudo关键字可以使得用户取得高级权限
		但是并不是只要用了sudo关键字就可以有高级权限，用户必须在/etc/sudoers文件中注册才行
		注册用户，获得高级权限的操作
			vim /etc/sudoers 打开sudoers文件
			写上用户名即可

	切换用户操作
	su 用户名 切换到指定的用户
	su 切换到root用户

关于文件属性和信息
	当你使用 ls -l 时会显示文件的所有属性如下
	d/- rwxrwxrwx 5 root1 root2 4096/文件大小 filename
	其中d/- d表示该文件是一个文件夹， - 表示该文件是一个普通文件
	rwxrwxrwx 三个一组，第一组表示所属用户，第二组表示所属组，第三组表示其他组
		r 表示可以对文件进行读取操作，对应的权限数字是4
		w 表示可以对文件进行写入操作，对应的权限数字是2
		x 表示对文件可执行， 对应的权限数字是1
	root1 表示文件的所有者
	root2 表示文件的所属组
	4096/文件大小 当时4096时代表的就是文件是一个文件夹，当时其他数字时就表示文件的大小

修改文件权限的操作
	修改文件的模式
		chmod关键字，chmod关键字修改的是文件的读写可执行功能
		用字母的形式修改读写权限
			chmod o+w filename 让其他用户拥有写入权限
			chmod u+w filename 让文件所有者拥有写入功能
			chmod g+r filename 让文件的所属组拥有读取功能
			chmod a+x filename 让文件所有者，所属组，其他用户都有可执行的功能
		用数字的形式修改读写权限
			chmod 777 filename 让文件所有者，所属组，和其他用户拥有对文件的全部权限
			chmod 642 filename 
	修改文件的所属者
		chown关键字 chown关键字修改的是文件的所有者
		chown user filename 将filename的所有者改为user
	修改文件的所属组
		chgrp 关键字 chgrp是为了改变文件的所属组
		chgrp user_group filename 将文件移动到名为user_group的组里面

删除和创建文件和文件夹
	mkdir filename 创建一个文件夹
	touch filename 创建一个文件
	rm -rf 删除一个文件或者文件夹
		-r 表示递归删除
		-f 表示强制删除
	cp filename path 将文件复制到一个指定的地址
	mv filename path 将文件移动到一个指定的地址



文件的压缩和解压指令
	zip文件
		zip new.zip filename 对文件进行压缩
		unzip new.zip 对文件进行解压
	gzip文件
		gzip filename 对文件进行压缩
		gunzip filename.gz 对文件进行解压
	
	一般情况下对文件一般是压缩打包或者解压拆包操作
		tar -zcvf filename 对文件进行压缩打包
			-z 是对文件进行gzip方式压缩
			-c 表示打包文件
			-f 表示指定一个文件
			-v 表示查看文件打包的过程
		tar -zxvf filename 对文件进行解压拆包操作
			-z 表示对文件解压的方式是gunzip
			-x 表示拆包
			-f 表示指定的文件
			-v 表示查看文件解压拆包的过程

虚拟环境相关的操作指令
	虚拟环境的安装
		1.安装必备的两个插件
			sudo pip install virtualenv
			sudo pip install virtualenvwrapper
		2.执行脚本文件
			cd /usr/local/bin 
			source virtualenvwrapper.sh 
		3.配置环境变量
			vim ~/.bashrc 打开配置环境变量的文件
			export	VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3.6 指定虚拟环境的版本
			export WORKON_HOME=~/.envs 指定创建一个虚拟环境之后应该放在哪里
			source /usr/local/bin/virtualenvwrapper.sh 激活环境变量配置

	虚拟环境的使用
		1.mkvirtualenv filename 创建一个虚拟环境
		2.workon filename 切换虚拟环境工作
		3.deactivate 退出当前虚拟环境
		4.rmvirtualenv 删除当前的虚拟环境

服务监听相关的指令
	查看进程
		ps -aux 查看当前运行的进程
		ps -aux|grep 进程名 查看指定进程的运行
	终止进程
		kill pid 终止一个进程
		kill -9 pid 强制终止一个进程

管道与重定向
	管道
		管道的操作符是|,管道的意思是将上一次输出的结果作为下一次输入的数据
		find filename|xarg rm -rf
	重定向
		> 表示重定向一个文件中，新输入的结果会覆盖掉之前的输入
		>> 表示重定向到一个文件中，不会覆盖之前的输入
		ls ./ 1 > filename 把正确的结果保存到一个文件中去
		ls ./ 2 > filename 把错误的输出结果保存到一个文件中去
		ls ./& > filename  把所有的输出结果保存到一个文件中去
Nginx
	Nginx会自动的搭建一个页面
	下载Nginx
		yum install Nginx
	启动Nginx
		sudo systemsctl start nginx.service
	监听nginx
		ps -aux|grep nginx 
	ngnix中的两个重要配置
		listen 80 default_server 设置监听端口
		root /usr/share/nginx/html 存放静态文件的路径






