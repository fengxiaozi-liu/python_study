jQuery的介绍
    1.jQuery的定义
        jQuery是JavaScript的封装，
    2.jQuery的作用：
        jQuery和JavaScript的作用一样，都是负责网页行为操作，增加网页的交互效果的，它能够用来简化JavaScript的编程代码
    3.jQuery的优点
        兼容现在主流的浏览器，增加了开发效率
        简化了JavaScript编程
jquery的用法
    1.jquery的引用
        <script src="../js-jquery/jquery-1.12.4.min.js"/</script>
    2.jquery的入口函数
        我们知道使用js获取标签元素，需要页面加载完成后再获取，我们通过onload事件属性设置了一个函数来获取标签
        元素，而jquery使用ready函数来解决这个问题，保证获取标签元素没有问题，它的速度比原生的Windows.onload更快
jquery的选择器：
    1.jquery选择器的介绍
        jquery选择器就是快速选择标签元素，获取标签的，选择规格和css样式一样
    2.jquery选择器的种类
        1.标签选择器
        2.类选择器
        3.id选择器
        4.层级选择器
        5.属性选择器
jquery中的选择集过滤
    1.选择集过滤的介绍
        选择集过滤就是在选择标签的集合里面过滤自己需要的标签
    2.选择集过滤的操作
        has(选择器名称)方法,表示选取包含指定选择器的标签
        eq(索引)方法，表示选取指定索引的标签
jquery中的选择集转移
    1.选择集转移的介绍
        选择集转移就是以选择器的标签为参照，然后获取其他的标签
    2.选择集转移的操作
        $('#box').prev(); 表示选择器id是box元素上的一个同级元素
        $('#box').prevAll(); 表示选择器id是box元素上面所有的同级元素
        $('#box').next(); 表示选择器id是box元素的下一个同级元素
        $('#box').nextAll(); 表示选择器id是box元素下面所有的同级元素
        $('#box').parent(); 表示选择器id是box元素的父元素
        $('#box').children(); 表示选择器id是box元素的子元素
        $('#box').siblings(); 表示选择器id是box元素的其他同级元素
        $('#box').find('.myClass'); 表示选择器id是box元素的class等于myClass的元素
jquery中获取和设置标签包裹的内容
    1.html方法的使用
        jquery中的html方法可以获取和设置标签的html的内容
        给指定标签增加html内容使用append方法
    2.总结
        获取和市直元素内容使用html方法
        给指定元素追加html内容使用append方法
jquery中获取和设置样式属性
    1.prop方法的使用
        之前使用css方法给标签设置样式属性，那么设置标签的其他属性可以使用prop方法
        获取和设置value属性可以通过val方法来完成
    2.总结
        获取和设置元素属性的操作可以通过prop方法来完成
        获取和设置value属性可以通过val方法来完成，更加简单方便
jquery事件
    常用事件
        click() 鼠标单击
        blur() 元素失去焦点
        focus() 元素获得焦点
        mouseover() 鼠标进入(进入子元素也触发)
        mouseout() 鼠标离开(离开子元素也触发)
        ready() DOM加载完成
jquery中的事件代理
    1.事件代理的介绍
        事件代理就是利用事件冒泡的原理(事件冒泡就是事件会向它的父级一级一级传递)，把事件加到父级上，通过判断事件来源，执行相应的
        子元素的操作，事件代理首先可以极大减少事件绑定次数，提高性能，其次可以让新加入的子元素也可以有相同的操作。
    2.主要是会使用delegate()方法
        $变量名.delegate("标签","事件",function(){})

JavaScript对象
    1.JavaScript对象介绍
        JavaScript中所有的事物都是对象：字符串、数值、函数都可以认为是对象，此外JavaScript允许自定义对象
        对象可以拥有属性和方法
    2.JavaScript创建对象操作
        创建自定义JavaScript对象有两种方式
            1.通过顶级object类型来实例化一个对象
            2.通过对象字面创建一个对象
JavaScript中的json使用
    1.json的介绍
        json是JavaScript object notation的首字母缩写，翻译过来就是JavaScript对象表示法，这里说的json就是类似
        于JavaScript对象的字符串，他同时是一种数据格式，目前这种数据格式比较流行，逐渐替换掉了传统的xml数据格式
    2.json的格式
        1.对象格式
            表现形式
                对象格式的json数据，使用一对大括号({}),大括号里面放入key:value形式的键值对，多个键值对使用逗号分隔
            对象格式的Json数据
                {"name":"zhangsan","age":18}
            对象格式json数据说明
                json中的(key)属性名称和字符串值需要用双引号，用单引号或者不用引导号会导致数据错误。
        2.数组格式的json数据
            表现形式：
                数组格式的json数据，使用一对中括号([]),中括号里面的数据使用逗号分隔。
            数组格式的json数据
                ["zhang",18,"student"]
JavaScript中的ajax
    1.ajax的介绍
        定义与作用：
            ajax是一个前后台配合的技术，他可以让JavaScript发送异步的http请求，ajax的最大优点是实现局部刷新，ajax可以发送
            http请求，当获取到后台数据的时候更新页面显示数据实现局部刷新，当前端页面和后台服务器进行数据交互既可以使用ajax
        提示：
            在html页面使用ajax需要在web服务器环境下进行，一般向自己的web服务器发送ajax请求
    2.ajax的使用
        jquery将它封装成了一个$.ajax()方法，我们可以直接使用这个方法来执行ajax请求
        ajax的参数
            url： 请求地址
            type： 请求方式，默认是get，常用的还有post
            dataType： 设置返回数据的格式，常用的是json格式
            data：设置发送服务器的数据，没有参数的不需要设置
            success：设置请求成功那个后的回调函数
            error：设置请求失败后的回调函数
            async：设置是否异步，默认是true，表示异步，一般不用写
            同步和异步的说明：
                同步是ajax请求完成另外一个才可以请求，需要等待ajax请求完成，好比线程同步
                异步是多个ajax同时请求，不需要等待其他ajax请求完成，好比线程异步
        ajax的简写方式
            $.ajax按照请求方式可以简写成$.get或者$.post方式


