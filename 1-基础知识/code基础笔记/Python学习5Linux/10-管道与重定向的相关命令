管道：
    管道的操作符是'|',他只能处理经由前面一个指令传出的正确输出信息，然后传递给下一个命令，作为下一个命令的标准输入。
    注意：
        管道命令只能处理前一个命令的正确输入，不能处理错误输出
        管道命令右边的命令，必须要能够接受标准的输入流才行
        有些命令无法接受输入流，需要通过xargs来将输入流转换成命令行参数
            exp：find -name 2.txt|xargs rm -rf

重定向 > （一个大于号就是一个重定向）
    标准输入(stdin) 标准输出(stdout) 标准错误(stderr)
        在Linux中，创建任意进程，系统会自动创建上面三个数据流，其实就是三个文件
        三个文件的描述符分别是：0、1、2其中，0是默认执行键盘，1和2指向终端窗口
        重定向就是改变原来默认的表现位置

    具体使用方式：
        exp：ps -aux > ps.txt (把aux列出来的结果重定向到一个指定的文件里面)
            >如果文件已经存在会覆盖
        exp ps -aux >> ps.txt (把aux的执行结果追加到ps.txt)
            >>文件不会覆盖会追加

    使用分类：
        标准输出：> 默认是重定向标准输出
            exp: ls ./ > file_name 相当于 ls ./ 1> file_name
                把正确的结果保存到file_name文件中去
        错误输出：
            exp:lx ./ 2> file_name
                把错误的结果重定向到指定的文件
        全部输出：
            exp：ls ./ &> file_name
                把全部的结果保存到file_name文件中去

多个命令的几种方式：
    cmd1;cmd2 用分号隔开不同的命令，两个命令之间互不影响
    cmd1||cmd2 如果前面的命令执行成功了，后面的命令就不再执行了，前面的失败才会执行后面的
    cmd1&&cmd2 只有前面的命令成功了才会执行后面的
